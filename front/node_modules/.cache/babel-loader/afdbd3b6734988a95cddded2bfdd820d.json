{"remainingRequest":"/home/filippo/Área de Trabalho/snowman/front/node_modules/babel-loader/lib/index.js!/home/filippo/Área de Trabalho/snowman/front/node_modules/eslint-loader/index.js??ref--13-0!/home/filippo/Área de Trabalho/snowman/front/src/controllers/userController.js","dependencies":[{"path":"/home/filippo/Área de Trabalho/snowman/front/src/controllers/userController.js","mtime":1617139034004},{"path":"/home/filippo/Área de Trabalho/snowman/front/node_modules/cache-loader/dist/cjs.js","mtime":1614099632392},{"path":"/home/filippo/Área de Trabalho/snowman/front/node_modules/babel-loader/lib/index.js","mtime":1614027570184},{"path":"/home/filippo/Área de Trabalho/snowman/front/node_modules/eslint-loader/index.js","mtime":1605203058655}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0IF9hc3luY1RvR2VuZXJhdG9yIGZyb20gIi9ob21lL2ZpbGlwcG8vXHhDMXJlYSBkZSBUcmFiYWxoby9zbm93bWFuL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9hc3luY1RvR2VuZXJhdG9yIjsKaW1wb3J0IF9jbGFzc0NhbGxDaGVjayBmcm9tICIvaG9tZS9maWxpcHBvL1x4QzFyZWEgZGUgVHJhYmFsaG8vc25vd21hbi9mcm9udC9ub2RlX21vZHVsZXMvQGJhYmVsL3J1bnRpbWUvaGVscGVycy9lc20vY2xhc3NDYWxsQ2hlY2siOwppbXBvcnQgX2NyZWF0ZUNsYXNzIGZyb20gIi9ob21lL2ZpbGlwcG8vXHhDMXJlYSBkZSBUcmFiYWxoby9zbm93bWFuL2Zyb250L25vZGVfbW9kdWxlcy9AYmFiZWwvcnVudGltZS9oZWxwZXJzL2VzbS9jcmVhdGVDbGFzcyI7CmltcG9ydCAicmVnZW5lcmF0b3ItcnVudGltZS9ydW50aW1lLmpzIjsKaW1wb3J0IGFwaSBmcm9tICIuLi9zZXJ2aWNlcy9zZXJ2aWNlLmFwaSI7Cgp2YXIgVXNlckNvbnRyb2xsZXIgPSAvKiNfX1BVUkVfXyovZnVuY3Rpb24gKCkgewogIGZ1bmN0aW9uIFVzZXJDb250cm9sbGVyKCkgewogICAgX2NsYXNzQ2FsbENoZWNrKHRoaXMsIFVzZXJDb250cm9sbGVyKTsKICB9CgogIF9jcmVhdGVDbGFzcyhVc2VyQ29udHJvbGxlciwgW3sKICAgIGtleTogImNyZWF0ZSIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2NyZWF0ZSA9IF9hc3luY1RvR2VuZXJhdG9yKCAvKiNfX1BVUkVfXyovcmVnZW5lcmF0b3JSdW50aW1lLm1hcmsoZnVuY3Rpb24gX2NhbGxlZShuYW1lLCBlbWFpbCwgcGFzc3dvcmQpIHsKICAgICAgICB2YXIgdXNlcjsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZSQoX2NvbnRleHQpIHsKICAgICAgICAgIHdoaWxlICgxKSB7CiAgICAgICAgICAgIHN3aXRjaCAoX2NvbnRleHQucHJldiA9IF9jb250ZXh0Lm5leHQpIHsKICAgICAgICAgICAgICBjYXNlIDA6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gMDsKICAgICAgICAgICAgICAgIF9jb250ZXh0Lm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5wb3N0KCIvdXNlcnMiLCB7CiAgICAgICAgICAgICAgICAgIG5hbWU6IG5hbWUsCiAgICAgICAgICAgICAgICAgIGVtYWlsOiBlbWFpbCwKICAgICAgICAgICAgICAgICAgcGFzc3dvcmQ6IHBhc3N3b3JkCiAgICAgICAgICAgICAgICB9KTsKCiAgICAgICAgICAgICAgY2FzZSAzOgogICAgICAgICAgICAgICAgdXNlciA9IF9jb250ZXh0LnNlbnQ7CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQuYWJydXB0KCJyZXR1cm4iLCB1c2VyLmRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dC5wcmV2ID0gNzsKICAgICAgICAgICAgICAgIF9jb250ZXh0LnQwID0gX2NvbnRleHRbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dC50MCk7CiAgICAgICAgICAgICAgICB0aHJvdyBfY29udGV4dC50MDsKCiAgICAgICAgICAgICAgY2FzZSAxMToKICAgICAgICAgICAgICBjYXNlICJlbmQiOgogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0LnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUsIG51bGwsIFtbMCwgN11dKTsKICAgICAgfSkpOwoKICAgICAgZnVuY3Rpb24gY3JlYXRlKF94LCBfeDIsIF94MykgewogICAgICAgIHJldHVybiBfY3JlYXRlLmFwcGx5KHRoaXMsIGFyZ3VtZW50cyk7CiAgICAgIH0KCiAgICAgIHJldHVybiBjcmVhdGU7CiAgICB9KCkKICB9LCB7CiAgICBrZXk6ICJnZXRVc2VycyIsCiAgICB2YWx1ZTogZnVuY3Rpb24gKCkgewogICAgICB2YXIgX2dldFVzZXJzID0gX2FzeW5jVG9HZW5lcmF0b3IoIC8qI19fUFVSRV9fKi9yZWdlbmVyYXRvclJ1bnRpbWUubWFyayhmdW5jdGlvbiBfY2FsbGVlMihpZCkgewogICAgICAgIHZhciB1c2VyczsKICAgICAgICByZXR1cm4gcmVnZW5lcmF0b3JSdW50aW1lLndyYXAoZnVuY3Rpb24gX2NhbGxlZTIkKF9jb250ZXh0MikgewogICAgICAgICAgd2hpbGUgKDEpIHsKICAgICAgICAgICAgc3dpdGNoIChfY29udGV4dDIucHJldiA9IF9jb250ZXh0Mi5uZXh0KSB7CiAgICAgICAgICAgICAgY2FzZSAwOgogICAgICAgICAgICAgICAgX2NvbnRleHQyLnByZXYgPSAwOwogICAgICAgICAgICAgICAgX2NvbnRleHQyLm5leHQgPSAzOwogICAgICAgICAgICAgICAgcmV0dXJuIGFwaS5nZXQoIi91c2Vycy8iLmNvbmNhdChpZCkpOwoKICAgICAgICAgICAgICBjYXNlIDM6CiAgICAgICAgICAgICAgICB1c2VycyA9IF9jb250ZXh0Mi5zZW50OwogICAgICAgICAgICAgICAgcmV0dXJuIF9jb250ZXh0Mi5hYnJ1cHQoInJldHVybiIsIHVzZXJzLmRhdGEpOwoKICAgICAgICAgICAgICBjYXNlIDc6CiAgICAgICAgICAgICAgICBfY29udGV4dDIucHJldiA9IDc7CiAgICAgICAgICAgICAgICBfY29udGV4dDIudDAgPSBfY29udGV4dDJbImNhdGNoIl0oMCk7CiAgICAgICAgICAgICAgICBjb25zb2xlLmxvZyhfY29udGV4dDIudDApOwogICAgICAgICAgICAgICAgdGhyb3cgX2NvbnRleHQyLnQwOwoKICAgICAgICAgICAgICBjYXNlIDExOgogICAgICAgICAgICAgIGNhc2UgImVuZCI6CiAgICAgICAgICAgICAgICByZXR1cm4gX2NvbnRleHQyLnN0b3AoKTsKICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0sIF9jYWxsZWUyLCBudWxsLCBbWzAsIDddXSk7CiAgICAgIH0pKTsKCiAgICAgIGZ1bmN0aW9uIGdldFVzZXJzKF94NCkgewogICAgICAgIHJldHVybiBfZ2V0VXNlcnMuYXBwbHkodGhpcywgYXJndW1lbnRzKTsKICAgICAgfQoKICAgICAgcmV0dXJuIGdldFVzZXJzOwogICAgfSgpCiAgfV0pOwoKICByZXR1cm4gVXNlckNvbnRyb2xsZXI7Cn0oKTsKCmV4cG9ydCB7IFVzZXJDb250cm9sbGVyIGFzIGRlZmF1bHQgfTs="},{"version":3,"sources":["/home/filippo/Área de Trabalho/snowman/front/src/controllers/userController.js"],"names":["api","UserController","name","email","password","post","user","data","console","log","id","get","users"],"mappings":";;;;AAAA,OAAOA,GAAP,MAAgB,yBAAhB;;IAEqBC,c;;;;;;;;4EACpB,iBAAaC,IAAb,EAAmBC,KAAnB,EAA0BC,QAA1B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEqBJ,GAAG,CAACK,IAAJ,CAAS,QAAT,EAAmB;AACrCH,kBAAAA,IAAI,EAAEA,IAD+B;AAErCC,kBAAAA,KAAK,EAAEA,KAF8B;AAGrCC,kBAAAA,QAAQ,EAAEA;AAH2B,iBAAnB,CAFrB;;AAAA;AAEQE,gBAAAA,IAFR;AAAA,iDAQSA,IAAI,CAACC,IARd;;AAAA;AAAA;AAAA;AAUEC,gBAAAA,OAAO,CAACC,GAAR;AAVF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;8EAeA,kBAAeC,EAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAEsBV,GAAG,CAACW,GAAJ,kBAAkBD,EAAlB,EAFtB;;AAAA;AAEQE,gBAAAA,KAFR;AAAA,kDAGSA,KAAK,CAACL,IAHf;;AAAA;AAAA;AAAA;AAKEC,gBAAAA,OAAO,CAACC,GAAR;AALF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,O;;;;;;;;;;;;;SAhBoBR,c","sourcesContent":["import api from \"../services/service.api\";\n\nexport default class UserController {\n\tasync create(name, email, password) {\t\n\t\ttry {\n\t\t\tconst user = await api.post(\"/users\", {\n\t\t\t\tname: name,\n\t\t\t\temail: email,\n\t\t\t\tpassword: password\n\t\t\t});\n\t\n\t\t\treturn user.data;\n\t\t} catch(e) {\n\t\t\tconsole.log(e)\n\t\t\tthrow e\n\t\t}\n\t}\n\n\tasync getUsers(id) {\n\t\ttry {\n\t\t\tconst users = await api.get(`/users/${id}`);\n\t\t\treturn users.data;\n\t\t} catch(e) {\n\t\t\tconsole.log(e)\n\t\t\tthrow e\n\t\t}\t\n\t}\n}\n"]}]}